<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!--
    1. right click on project, add framework support, check Maven
    2. enter groupId (i.e. com.example)
    3. add packaging of type jar
    -->
    <groupId>com.example</groupId>
    <artifactId>springboot-from-scratch</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>spring-boot-from-scratch</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
    </parent>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <!--
    4. add dependency for mysql and specify connection version
    5. run "mvn package" from terminal window below
    6. add hibernate, lookup latest version on mvnrepository.com
    -->
    <dependencies>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!--
        spring-boot-starter-data-rest
        This is what creates all the rest services for your entities/POJOs
        Also, needed to use @RepositoryRestResource Annotation
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <!--
        spring-boot-starter-jpa will auto pull in hibernate-core
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <!--
        This will automatically be pulled in with spring-boot-start-data-rest.
        If you don't use REST, you will need this to create @RestController controllers.
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        -->
        <!-- Starts the HAL Browser at http://localhost:8080/browser/index.html -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-hal-browser</artifactId>
        </dependency>
        <!--
        junit is auto pulled in for spring-boot-start-test
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        -->
        <!-- https://mvnrepository.com/artifact/org.meanbean/meanbean -->
        <!-- Unit Test POJOs -->
        <dependency>
            <groupId>org.meanbean</groupId>
            <artifactId>meanbean</artifactId>
            <version>2.0.3</version>
            <scope>test</scope>
        </dependency>
        <!--
        spring-boot-start test pulls in all the testing repos needed
        junit, mockito, hamcrest, etc
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
        hamcrest-core is a already auto pulled in for
        spring-boot-start-test and for junit 4.12
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        -->
        <!-- Hot Reloading -->
        <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <optional>true</optional>
    </dependency>
				<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
				<dependency>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
						<version>1.18.4</version>
						<scope>provided</scope>
				</dependency>

		</dependencies>
</project>